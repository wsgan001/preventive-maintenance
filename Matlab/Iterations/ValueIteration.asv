function [x_convergence,v_convergence] = ValueIteration(cdf, timeStep, discount,numIterations,c,a,initValue)
    
    function [limit,newValueFunction] = valueIterate(cdf,timeStep,discount,c,a,oldValueFunction)
    % Performs one value iteration
        function [time] = timeForStep(step,timeStep)
            time = timeStep.*(step-1);
        end
        function[failProbability] = failProbability(step,timeStep,cdf)
            failProbability = (cdf(timeForStep(step+1,timeStep))-cdf(timeForStep(step,timeStep)))/(1-cdf(timeForStep(step,timeStep)));
        end
    limit = Inf(1);
    repairCost = c+discount*oldValueFunction(2);
    newValueFunction = zeros('like',oldValueFunction);
    for i=1:length(oldValueFunction)
        if i==1
           newValueFunction(1) = c+a+discount.*oldValueFunction(2);
        else
            fail = failProbability(i,timeStep,cdf);
            waitCost = discount.*(fail.*(a+repairCost)+(1-fail).*oldValueFunction(min(i+1,length(oldValueFunction))));
            if (repairCost < waitCost)
                newValueFunction(i) = repairCost;
                limit = min(timeForStep(i),limit);
            else
                newValueFunction(i) = waitCost;
            end
            newValueFunction(i) = min(repairCost,waitCost);
        end
    end
    end
numSteps = length(initValue);
count = 0;
x_convergence = zeros(1,1+numIterations);
v_convergence = zeros(1,1+numIterations);
valueFunction = initValue;
for j=1:numIterations
    [limit,valueFunction] = valueIterate(cdf,timeStep,discount,c,a,valueFunction);
    count = count+1;
    v_convergence(j+1) = valueFunction(1);
    x_convergence(j+1) = limit;
end
end


